{"mappings":"AAAA,aAIA,SAASA,aAEP,SAASC,EAAmBC,GAC1B,IAAIC,EAAiBD,GAA4CE,SAASC,iBAAiB,yBACvFF,GACFA,EAAeG,SAAQ,SAAAC,IAM3B,SAA+BA,GAC7B,IAAIC,EAAiB,KACfC,EAAWC,SAASH,EAAcI,QAAQJ,eAAiBG,SAASH,EAAcI,QAAQJ,eAAiB,IAC3GK,EAAaF,SAASH,EAAcM,WACpCC,EAAgB,EAChBC,EAAO,SAACC,GACPR,IAAgBA,EAAiBQ,GACtC,IAAMC,EAAWC,KAAKC,KAAKH,EAAYR,GAAkBC,EAAU,GACnEF,EAAcM,UAAYK,KAAKE,MAAMH,GAAYH,EAAgBF,IAC7DK,EAAW,GACbI,OAAOC,sBAAsBP,E,EAGjCM,OAAOC,sBAAsBP,E,CAlBzBQ,CAAsBhB,E,IAqB5BN,IAEA,IAGIuB,EAAW,IAAIC,sBAAqB,SAACC,EAASC,GAChDD,EAAQpB,SAAQ,SAAAsB,GACd,GAAIA,EAAMC,eAAgB,CACxB,IAAMC,EAAgBF,EAAMG,OACtB7B,EAAsB4B,EAAczB,iBAAiB,yBACvDH,EAAoB8B,QACtB/B,EAAmBC,GAErByB,EAASM,UAAUH,E,OAXX,CACZI,UAAW,KAcTC,EAAW/B,SAASC,iBAAiB,eACrC8B,EAASH,QACXG,EAAS7B,SAAQ,SAAA8B,GACfZ,EAASa,QAAQD,E,IAjDvBf,OAAOiB,iBAAiB,OAAQtC","sources":["src/js/digitscounter.js"],"sourcesContent":["\"use strict\"\n\nwindow.addEventListener(\"load\", windowLoad);\n\nfunction windowLoad() {\n\n  function digitsCountersInit(digitsCountersItems) {\n    let digitsCounters = digitsCountersItems ? digitsCountersItems : document.querySelectorAll(\"[data-digits-counter]\");\n    if (digitsCounters) {\n      digitsCounters.forEach(digitsCounter => {\n        digitsCountersAnimate(digitsCounter);\n      });\n    }\n  }\n\n  function digitsCountersAnimate(digitsCounter) {\n    let startTimestamp = null;\n    const duration = parseInt(digitsCounter.dataset.digitsCounter) ? parseInt(digitsCounter.dataset.digitsCounter) : 1000;\n    const startValue = parseInt(digitsCounter.innerHTML);\n    const startPosition = 0;\n    const step = (timestamp) => {\n      if (!startTimestamp) startTimestamp = timestamp;\n      const progress = Math.min((timestamp - startTimestamp) / duration, 1);\n      digitsCounter.innerHTML = Math.floor(progress * (startPosition + startValue));\n      if (progress < 1) {\n        window.requestAnimationFrame(step);\n      }\n    };\n    window.requestAnimationFrame(step);\n  }\n\n  digitsCountersInit();\n\n  let options = {\n    threshold: 0.3\n  }\n  let observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        const targetElement = entry.target;\n        const digitsCountersItems = targetElement.querySelectorAll(\"[data-digits-counter]\");\n        if (digitsCountersItems.length) {\n          digitsCountersInit(digitsCountersItems);\n        }\n        observer.unobserve(targetElement);\n      }\n    });\n  }, options);\n  let sections = document.querySelectorAll('.advantages');\n  if (sections.length) {\n    sections.forEach(section => {\n      observer.observe(section);\n    });\n  }\n}"],"names":["windowLoad","digitsCountersInit","digitsCountersItems","digitsCounters","document","querySelectorAll","forEach","digitsCounter","startTimestamp","duration","parseInt","dataset","startValue","innerHTML","startPosition","step","timestamp","progress","Math","min","floor","window","requestAnimationFrame","digitsCountersAnimate","observer1","IntersectionObserver","entries","observer","entry","isIntersecting","targetElement","target","length","unobserve","threshold","sections","section","observe","addEventListener"],"version":3,"file":"index.f9832608.js.map"}